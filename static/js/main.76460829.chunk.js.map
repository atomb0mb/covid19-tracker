{"version":3,"sources":["components/Footer/Footer.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","images/c19v4.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","colr","Date","toDateString","url","fetchData","country","a","dynamicUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","options","scales","yAxes","scaleLabel","display","responsive","labelString","fontColor","fontSize","barChart","legend","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountry","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","footer","footer__addr","footer__logo","footer__nav","nav__item","nav__itemex","nav__title","class","href","rel","legal","heart","legal__links","App","state","fetchedCountryData","setState","fetchedData","this","image","src","pageimg","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76460829.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\",\"footer__logo\":\"Footer_footer__logo__38u5I\",\"footer__addr\":\"Footer_footer__addr__1ZJld\",\"nav__title\":\"Footer_nav__title__3l-_C\",\"footer__btn\":\"Footer_footer__btn__1Izyu\",\"footer__nav\":\"Footer_footer__nav__AjtsD\",\"nav__ul\":\"Footer_nav__ul__1keBE\",\"nav__ulex\":\"Footer_nav__ulex__1NP2S\",\"legal\":\"Footer_legal__fqJij\",\"legal__links\":\"Footer_legal__links__g-iEG\",\"heart\":\"Footer_heart__TKdFx\",\"nav__itemex\":\"Footer_nav__itemex__4EjGP\",\"bmc-button\":\"Footer_bmc-button__ud2dA\",\"bmcbutton\":\"Footer_bmcbutton__5G3j2\",\"last\":\"Footer_last__3uMuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n    //console.log(props);\n   //console.log(confirmed);\n    if(!confirmed ){\n        return 'Loading...';\n    }\n    \n    return (<div className={styles.container}>\n        <Grid container spacing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                    <Typography variant=\"h5\"></Typography>\n                    <CountUp \n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\">\n\n                    </CountUp>\n                    <Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\n                    <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                </CardContent>\n            </Grid>\n\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                    <Typography variant=\"h5\"></Typography>\n                    <CountUp \n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\">\n\n                    </CountUp>\n                    <Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of recoveries cases from COVID-19</Typography>\n                </CardContent>\n            </Grid>\n\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                <CardContent>\n\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                    <Typography variant=\"h5\"></Typography>\n                    <CountUp \n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\">\n\n                    </CountUp>\n                    <Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of death caused by COVID-19</Typography>\n                </CardContent>\n            </Grid>\n        </Grid>\n    </div>);\n};\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let dynamicUrl = url;\n\n    //If there is a country selected\n    if(country) {\n        //build the url\n        dynamicUrl = `${url}/countries/${country}`;\n    }\n\n\n    try {\n        //To see api output\n        //const response = await axios.get(url);\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(dynamicUrl);\n        \n        // const modifiedData = {\n        //     confirmed,\n        //     recovered,\n        //     deaths,\n        //     lastUpdate\n        // }\n        // // console.log('apidata: ')\n        // // console.log(modifiedData);\n        // return modifiedData;\n        return { confirmed, recovered, deaths, lastUpdate };\n    } catch (error) {\n        \n    }\n\n\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        //console.log(data);\n\n        const modifiedData = data.map((dailyData) => (\n            {\n                confirmed: dailyData.confirmed.total,\n                deaths: dailyData.deaths.total,\n                date: dailyData.reportDate,\n\n            }            \n        ));\n\n        return modifiedData;\n        \n    } catch (error) {\n\n    }\n    \n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: {countries} } = await axios.get(`${url}/countries`);\n        //console.log(response);\n        return countries.map((country) => country.name);\n    }catch(error){\n\n    }\n}\n","import React, {useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport {Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data, country}) => {\n    // similar way of state: {data}\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=>{\n        const fetchApi = async () => {\n            //const dailyData = await fetchDailyData();\n            setDailyData(await fetchDailyData())\n        }\n\n        //console.log(dailyData);\n\n        fetchApi();\n    }, []);\n    //if there is no daily data first day return null\n    const lineChart = (\n        dailyData.length ? (\n        // daily data only available for infected and death\n        <Line data ={{\n            labels: dailyData.map(({date}) => date),\n            datasets: [{\n                data: dailyData.map(({confirmed})=>confirmed),\n                label: 'Infected', \n                borderColor: '#3333ff', \n                fill: true },\n            {\n                data: dailyData.map(({deaths})=>deaths),\n                label: 'Deaths', \n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)', \n                fill: true \n            }],\n        }}\n        options={{\n            scales: {\n                      yAxes: [{\n                        scaleLabel: {\n                          display: true,\n                          responsive: true,\n                          labelString: 'Number of People',\n                          fontColor: '#000000',\n                          fontSize: 14\n                        }\n                      }],\n                    //   xAxes: [ {\n                    //     //type: 'time',\n                    //     display: true,\n                    //     scaleLabel: {\n                    //       display: true,\n                    //       labelString: 'Date',\n                    //       fontColor: '#000000',\n                    //       fontSize: 14\n                    //     }}],\n                    }     \n        }}\n        />) : null\n    \n    );\n\n    // console.log(data.confirmed);\n    // console.log(data.recovered);\n\n    const barChart = (\n        data.confirmed ? (<Bar data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [{\n                label: 'People',\n                backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n            }]\n        }}\n        options={{\n            legend: {display: false },\n            title: {display: true, text: `Current state in ${country}`, fontSize: 16},\n        }}\n        />) : null\n    );\n\n\n    return(<div className={styles.container}>{country ? barChart: lineChart}</div>)\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api';\n\n\nconst CountryPicker = ({ handleCountryChange}) => {\n\n    const [fetchedCountries, setFetchedCountry] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountry(await fetchCountries());\n        }\n    \n\n    fetchAPI();\n}, [setFetchedCountry]);\n\n    return(<FormControl className={styles.FormControl}>\n        <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n            <option value=\"\">Global</option>\n            {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n        </NativeSelect>\n    </FormControl>)\n}\n\nexport default CountryPicker;","import React from 'react';\nimport styles from './Footer.module.css';\nimport cx from 'classnames';\n\nconst Footer = () => {\n\n\n    return (\n      \n      <footer className={styles.footer}>\n        <div className={styles.footer__addr}>\n          <h1 className={styles.footer__logo}>Covid-19 Tracker</h1>\n              \n          <h2>The app covid-19 tracker is here to help to spread awareness by visualizing the data.</h2>\n          \n        </div>\n        \n        <ul className={styles.footer__nav}>\n          <li className={styles.nav__item}>\n              \n            {/* <h2 className={styles.nav__title}>Social Media</h2>\n      \n            <ul className={styles.nav__ul}>\n              <li>\n                <a href=\"#\">Linkedin</a> */}\n              {/* </li> */}\n      \n              {/* <li>\n                <a href=\"#\">Facebook</a>\n              </li> */}\n                  \n              {/* <li>\n                <a href=\"#\">Alternative Ads</a>\n              </li> */}\n            {/* </ul> */}\n            \n          </li> \n          \n          <li className={cx(styles.nav__item, styles.nav__itemex)}>\n            {/* <h2 className={styles.nav__title}>My Site</h2> */}\n            \n            {/* <ul className={cx(styles.nav__ul, styles.nav__ulex)}> */}\n              {/* <li>\n                <a href=\"#\">Personal Website</a>\n              </li> */}\n              \n              {/* <li>\n                <a href=\"#\">Github</a>\n              </li> */}\n              \n              {/* <li>\n                <a href=\"#\">Digital Signage</a>\n              </li>\n              \n              <li>\n                <a href=\"#\">Automation</a>\n              </li>\n              \n              <li>\n                <a href=\"#\">Artificial Intelligence</a>\n              </li>\n              \n              <li>\n                <a href=\"#\">IoT</a>\n              </li> */}\n            {/* </ul> */}\n            \n          </li>\n          \n          <li className={styles.nav__item}>\n            <h2 className={styles.nav__title}>Sites</h2>\n            \n            <ul class=\"nav__ul\">\n              <li>\n                <a href=\"https://cwng.webflow.io/\" target=\"_blank\" rel=\"noopener noreferrer\">About Me</a>\n              </li>\n              \n              <li>\n                <a href=\"https://www.linkedin.com/in/cwng-7135/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\n              </li>\n\n              <li>\n                <a href=\"https://github.com/atomb0mb/covid19-tracker\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n              </li>\n\n              \n              {/* <li>\n                <a href=\"#\">Sitemap</a>\n              </li> */}\n            </ul>\n          </li>\n        </ul>\n        \n        <div className={styles.legal}>\n          {/* <p>&copy; 2020 Something. All rights reserved.</p> */}\n          <span>Made with <span className={styles.heart}>♥</span> by cwng</span>\n          \n          <div className={styles.legal__links}>\n            {/* <span>Made with <span className={styles.heart}>♥</span> by atomb0mb</span>\n            <link href=\"https://fonts.googleapis.com/css?family=Lato&subset=latin,latin-ext\" rel=\"stylesheet\" />\n            <a className={styles.bmcbutton} target=\"_blank\" href=\"https://www.buymeacoffee.com/cwng\" rel=\"noopener noreferrer\">\n            <img src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\" alt=\"Buy me a coffee\" />\n            <span className={styles.last}>Buy me a coffee</span></a> */}\n          </div>\n        </div>\n\n\n        \n      </footer>);\n}\n\nexport default Footer;\n\n","import React from 'react';\nimport styles from './App.module.css'; // styles.container to make sure there is no interferace from other css file\n\n//Unique and cleanier way to import\nimport {Cards, Chart, CountryPicker, Footer } from './components';\n// Similar to this\n// import Cards from './components/Cards/Cards';\n// import Chart from './components/Chart/Chart';\n// import CountryPicker from './components/CountryPicker/CountryPicker';\n// .....footer \"\"\nimport{ fetchData } from './api';\nimport pageimg from './images/c19v4.png';\n\nclass App extends React.Component {\n \n  // similar to constructor\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    //console.log(fetchData);\n    this.setState({data: fetchedData});\n  }\n\n  // change the state of country\n  handleCountryChange = async (country) => {\n    //check country selected\n    //console.log(country);\n    const fetchedCountryData = await fetchData(country); // to display change on card\n    // output selected country data\n    // console.log(fetchedCountryData);\n    this.setState({data: fetchedCountryData, country: country});\n  }\n\n  render() {\n\n    const {data, country} = this.state;\n\n    return (\n      <div className={styles.container} >\n        <img className={styles.image} src={pageimg} alt=\"COVID-19\"></img>\n        <Cards data={data}/>\n        <p>Select Country:</p>\n        <CountryPicker handleCountryChange={this.handleCountryChange}></CountryPicker>\n        <p>Filter by:</p>\n        <Chart data={data} country={country}></Chart>\n        <br></br>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\",\"formControl\":\"Chart_formControl__2CWvu\"};","module.exports = __webpack_public_path__ + \"static/media/c19v4.36cbfe2e.png\";"],"sourceRoot":""}